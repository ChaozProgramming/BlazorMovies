@page "/movies/edit/{MovieId:int}"
@inject IMovieRepository movieRepository
@inject NavigationManager navigationManager;
@attribute [Authorize(Roles ="Admin")]

@if(Movie != null)
{
    <h3>Edit @Movie.Title</h3>

    <MovieForm Movie="Movie" 
        OnValidSubmit="Edit" 
        SelectedGenres="SelectedGenres" 
        NotSelectedGenres="NotSelectedGenres"
        SelectedActors="SelectedActors"/>
}

@code {
    [Parameter] public Movie Movie { get; set; } 
    [Parameter] public EventCallback OnValidSubmit { get; set; } 
    [Parameter] public int MovieId { get; set; }

    private List<Genre> NotSelectedGenres;
    private List<Genre> SelectedGenres;
    private List<Person> SelectedActors;

    protected override async Task OnInitializedAsync()
    {
        var model = await movieRepository.GetMovieForUpdate(MovieId);
        Movie = model.Movie;
        SelectedGenres = model.SelectedGenres;
        NotSelectedGenres = model.NotSelectedGenres;
        SelectedActors = model.Actors;
    }

    private async Task Edit()
    {
        await movieRepository.UpdateMovie(Movie);
        navigationManager.NavigateTo($"Movie/{Movie.Id}");

    }
}

